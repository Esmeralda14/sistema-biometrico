package Formularios;

import BD.CargarComboBox;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import BD.Conexion;
import com.mysql.jdbc.Connection;
import javax.swing.JOptionPane;


public class ListaEmpleados extends javax.swing.JInternalFrame {

    public int idRol = 0;
    DefaultTableModel modelo = new DefaultTableModel();
    
    public ListaEmpleados() {
        initComponents();
        try {
            // cargas combos
            CargarComboBox metodos_cargarcombobox = new CargarComboBox();
            metodos_cargarcombobox.consultar_puestos(cbPuesto); //.consultar_paises(cbox_Paises);

            // cargar datso en comboBox grupo
            metodos_cargarcombobox.consultar_grupos(cbGrupo); //.consultar_paises(cbox_Paises);
        
            tbEmpleados.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion c = new Conexion();
            java.sql.Connection con = c.getConexion();

            String sql = "" +
            "SELECT " +
            "   e.id, e.nombres, e.apellidos, p.puesto, g.grupo, e.horaEntrada, e.horaSalida " +
            "FROM tb_empleados e " +
            "INNER JOIN tb_puestos p " +
            "	on p.id = e.idPuesto " +
            "INNER JOIN tb_grupos g " +
            "	on g.id = e.idGrupo";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            modelo.addColumn("Clave");
            modelo.addColumn("Nombre(s)");
            modelo.addColumn("Apellidos");
            modelo.addColumn("Puesto");
            modelo.addColumn("Grupo");
            modelo.addColumn("Hora de entrada");
            modelo.addColumn("Hora de salida");

            int[] anchos = {30, 120, 120, 50,50,60,60};
            for (int i = 0; i < tbEmpleados.getColumnCount(); i++) {
                tbEmpleados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
            
                
            while (rs.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    } // Fin Constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtApellido = new javax.swing.JTextField();
        cbPuesto = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbGrupo = new javax.swing.JComboBox<>();
        txtHoraSalida = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        txtHoraEntrada = new javax.swing.JFormattedTextField();
        txtNombre = new javax.swing.JTextField();
        btnModificar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnEliminar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbEmpleados = new javax.swing.JTable();

        setClosable(true);
        setTitle("Empleados");
        setMinimumSize(new java.awt.Dimension(757, 446));

        jPanel1.setMinimumSize(new java.awt.Dimension(200, 1000));

        txtApellido.setEditable(false);

        jLabel7.setText("Hora de salida");

        jLabel2.setText("Nombre(s)");

        jLabel4.setText("Puesto");

        txtClave.setEnabled(false);
        txtClave.setFocusable(false);

        jLabel5.setText("Grupo");

        jLabel1.setText("Clave");

        jLabel3.setText("Apellidos");

        txtHoraSalida.setEditable(false);
        try {
            txtHoraSalida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel6.setText("Hora de entrada");

        txtHoraEntrada.setEditable(false);
        try {
            txtHoraEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        txtNombre.setEditable(false);

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setForeground(new java.awt.Color(204, 0, 0));
        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(55, 55, 55))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbGrupo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHoraEntrada)
                            .addComponent(txtHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbPuesto, javax.swing.GroupLayout.Alignment.TRAILING, 0, 109, Short.MAX_VALUE)
                            .addComponent(txtClave, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtHoraEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtHoraSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tbEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Clave", "Nombre(s)", "Apellidos", "Puesto", "Grupo", "Hora de entrada", "Hora de salida"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbEmpleados.setColumnSelectionAllowed(false);
        tbEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbEmpleadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbEmpleados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEmpleadosMouseClicked
        try {
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion c = new Conexion();
            java.sql.Connection con = c.getConexion();
            

            int Fila = tbEmpleados.getSelectedRow();
            String codigo = tbEmpleados.getValueAt(Fila, 0).toString();
            String sql = "" +
            "SELECT " +
            "   e.id, e.nombres, e.apellidos, p.puesto, g.grupo, e.horaEntrada, e.horaSalida " +
            "FROM tb_empleados e " +
            "INNER JOIN tb_puestos p " +
            "	on p.id = e.idPuesto " +
            "INNER JOIN tb_grupos g " +
            "	on g.id = e.idGrupo "+
            "WHERE e.id = ?";
            
            ps = con.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt( codigo ) );
            
            rs = ps.executeQuery();

            while (rs.next()) {
                txtClave.setText(rs.getString("id"));
                txtNombre.setText(rs.getString("nombres"));
                txtApellido.setText(rs.getString("apellidos"));
                cbPuesto.setSelectedItem(rs.getString("puesto"));
                cbGrupo.setSelectedItem(rs.getString("grupo"));
                txtHoraEntrada.setText(rs.getString("horaEntrada"));
                txtHoraSalida.setText(rs.getString("horaSalida"));
            // txtCodigo.setText(rs.getString("codigo"));
            // txtNombre.setText(rs.getString("nombre"));
            // txtPrecio.setText(rs.getString("precio"));
            // txtCantidad.setText(rs.getString("cantidad"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        if(this.idRol == 2){
            return;
        }
        btnEliminar.setEnabled(true);
        btnModificar.setEnabled(true);
    }//GEN-LAST:event_tbEmpleadosMouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int Fila = tbEmpleados.getSelectedRow();
        
        //validar combos
        if(cbPuesto.getSelectedIndex() == 0 || cbGrupo.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(ListaEmpleados.this, "Debe seleccionar un puesto y un grupo, intentelo nuevamente", "Validación fallida", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //validar horario
        Formularios.FuncionesComunes comun = new FuncionesComunes();
        if(   !(comun.validarHora(txtHoraEntrada.getText())) || !(comun.validarHora(txtHoraSalida.getText()))   )
        {
            JOptionPane.showMessageDialog(ListaEmpleados.this, "Error al validar los campos de horas, intentelo nuevamente", "Validación fallida", JOptionPane.ERROR_MESSAGE);
            return;
        }
        PreparedStatement ps = null;
        try {
            Conexion c = new Conexion();
            java.sql.Connection con = c.getConexion();
            
            String query = ""+
            "UPDATE tb_empleados "+
            "SET "+
            "nombres=?"+
            ",apellidos=?"+
            ",idPuesto=(select id from tb_puestos where puesto = ? )"+
            ",idGrupo=(select id from tb_grupos where grupo = ? )"+
            ",horaEntrada=?"+
            ",horaSalida=? "+
            "WHERE id = ?";
            ps = con.prepareStatement(query);

            ps.setString(1, txtNombre.getText());
            ps.setString(2, txtApellido.getText());
            ps.setString(3, cbPuesto.getSelectedItem().toString());
            ps.setString(4, cbGrupo.getSelectedItem().toString());
            ps.setString(5, txtHoraEntrada.getText());
            ps.setString(6, txtHoraSalida.getText());
            ps.setString(7, txtClave.getText());

            ps.execute();
            
            tbEmpleados.setValueAt(txtClave.getText(), Fila, 0);
            tbEmpleados.setValueAt(txtNombre.getText(), Fila, 1);
            tbEmpleados.setValueAt(txtApellido.getText(), Fila, 2);
            tbEmpleados.setValueAt(cbPuesto.getSelectedItem().toString(), Fila, 3);
            tbEmpleados.setValueAt(cbGrupo.getSelectedItem().toString(), Fila, 4);
            tbEmpleados.setValueAt(txtHoraEntrada.getText(), Fila, 5);
            tbEmpleados.setValueAt(txtHoraSalida.getText(), Fila, 6);
            
            JOptionPane.showMessageDialog(null, "Empleado modificado");

            limpiar();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al modificar al empleado");
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        PreparedStatement ps = null;
        try {
            Conexion c = new Conexion();
            java.sql.Connection conn = c.getConexion();

            int Fila = tbEmpleados.getSelectedRow();
            //String codigo = tbGrupo.getValueAt(Fila, 0).toString();
            String idEmpleado = txtClave.getText();

            ps = conn.prepareStatement("DELETE FROM tb_empleados WHERE id=?");
            ps.setString(1, idEmpleado);
            ps.execute();

            modelo.removeRow(Fila);
            
            txtClave.setText(null);
            txtNombre.setText(null);
            txtApellido.setText(null);
            cbPuesto.setSelectedItem(null);
            cbGrupo.setSelectedItem(null);
            txtHoraEntrada.setText(null);
            txtHoraSalida.setText(null);
            
            btnModificar.setEnabled(false);
            btnEliminar.setEnabled(false);
            
            JOptionPane.showMessageDialog(null, "Usuario eliminado");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al eliminar el usuario");
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cbGrupo;
    private javax.swing.JComboBox<String> cbPuesto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tbEmpleados;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtClave;
    private javax.swing.JFormattedTextField txtHoraEntrada;
    private javax.swing.JFormattedTextField txtHoraSalida;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    private void limpiar() {
        txtClave.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        cbPuesto.setSelectedIndex(0);
        cbGrupo.setSelectedIndex(0);
        txtHoraEntrada.setText("");
        txtHoraSalida.setText("");
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }
}
