package Formularios;

import BD.CargarComboBox;
import BD.Conexion;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ListaPuestos extends javax.swing.JInternalFrame {

    public int idRol = 0;
    DefaultTableModel modelo = new DefaultTableModel();
   
    public ListaPuestos() {
        initComponents();
        txtIdPuesto.setVisible(false);
        txtPuestoAnterior.setVisible(false);
        try {        
            tbPuesto.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            Conexion c = new Conexion();
            java.sql.Connection con = c.getConexion();

            String sql = "" +
            "SELECT id,puesto from tb_puestos order by puesto";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            //modelo.addColumn("Id");
            modelo.addColumn("Puesto");
            
            while (rs.next()) {
                Object[] filas = new Object[cantidadColumnas];
                //for (int i = 0; i < cantidadColumnas; i++) {
                //    filas[i] = rs.getObject(i + 1);
                //}
                filas[0] = rs.getString("puesto");
                modelo.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtPuestoAgregar = new javax.swing.JTextField();
        btnPuestoAgregar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtPuestoModificar = new javax.swing.JTextField();
        btnPuestoModificar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        btnPuestoEliminar = new javax.swing.JButton();
        txtIdPuesto = new javax.swing.JTextField();
        txtPuestoAnterior = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPuesto = new javax.swing.JTable();

        setClosable(true);
        setTitle("Puestos");

        jLabel1.setText("Puesto");

        btnPuestoAgregar.setText("Agregar");
        btnPuestoAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPuestoAgregarActionPerformed(evt);
            }
        });

        jLabel2.setText("Puesto");

        txtPuestoModificar.setEnabled(false);

        btnPuestoModificar.setText("Modificar");
        btnPuestoModificar.setEnabled(false);
        btnPuestoModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPuestoModificarMouseClicked(evt);
            }
        });
        btnPuestoModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPuestoModificarActionPerformed(evt);
            }
        });

        btnPuestoEliminar.setForeground(new java.awt.Color(204, 0, 0));
        btnPuestoEliminar.setText("Eliminar");
        btnPuestoEliminar.setEnabled(false);
        btnPuestoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPuestoEliminarActionPerformed(evt);
            }
        });

        txtIdPuesto.setText("idPuesto (oculto)");

        txtPuestoAnterior.setText("puesto_anterior (oculto)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPuestoAnterior, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPuestoEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPuestoAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPuestoAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator1)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPuestoModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnPuestoModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(txtIdPuesto))))
                .addGap(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPuestoAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPuestoAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPuestoModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPuestoModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPuestoEliminar)
                .addGap(39, 39, 39)
                .addComponent(txtIdPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPuestoAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        tbPuesto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbPuesto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPuestoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbPuesto);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPuestoAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPuestoAgregarActionPerformed
        PreparedStatement ps = null;
        String puesto = txtPuestoAgregar.getText().toUpperCase();
        if(puesto.isEmpty()){
            return;
        }
        try {
            Conexion c = new Conexion();
            java.sql.Connection conn = c.getConexion();
            ps = conn.prepareStatement("INSERT INTO tb_puestos (puesto) VALUES (?)");
            ps.setString(1, puesto);

            ps.execute();

            JOptionPane.showMessageDialog(null, "Puesto agregado");
            txtPuestoAgregar.setText(null);
            
            limpiarDatos();
            
            c.close(conn);
            
            cargarDatos();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No sepudo agregar el puesto, posiblemente ya exista un puesto con este nombre");
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnPuestoAgregarActionPerformed

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void tbPuestoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPuestoMouseClicked
        if(this.idRol == 2){
            return;
        }
        txtPuestoModificar.setEnabled(true);
        btnPuestoModificar.setEnabled(true);
        btnPuestoEliminar.setEnabled(true);
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            Conexion c = new Conexion();
            java.sql.Connection conn = c.getConexion();

            int Fila = tbPuesto.getSelectedRow();
            String codigo = tbPuesto.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT id, puesto FROM tb_puestos WHERE puesto=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtPuestoModificar.setText(rs.getString("puesto"));
                txtIdPuesto.setText(rs.getString("id"));
                txtPuestoAnterior.setText(rs.getString("puesto"));
            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_tbPuestoMouseClicked

    private void btnPuestoModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPuestoModificarMouseClicked
        
    }//GEN-LAST:event_btnPuestoModificarMouseClicked

    private void btnPuestoModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPuestoModificarActionPerformed
        String puesto = txtPuestoModificar.getText().toUpperCase();
        String puestoAnterior = txtPuestoAnterior.getText().toUpperCase();
        String id = txtIdPuesto.getText();
        
        int Fila = tbPuesto.getSelectedRow();

        PreparedStatement ps = null;
        
        // si no hay cambios se descarta el proceso
        if(puesto.equals(puestoAnterior)){
            return;
        }
        try {
            Conexion c = new Conexion();
            java.sql.Connection conn = c.getConexion();
            ps = conn.prepareStatement("UPDATE tb_puestos SET puesto=? WHERE id=?");

            ps.setString(1, puesto);
            ps.setString(2, id);

            ps.execute();

            JOptionPane.showMessageDialog(null, "Puesto modificado");
            c.close(conn);
            // volver a cargar los datos
            limpiarDatos();
            
            cargarDatos();
            

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No sepudo modificar el puesto, posiblemente ya exista un puesto con este nombre");
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnPuestoModificarActionPerformed

    private void btnPuestoEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPuestoEliminarActionPerformed
        PreparedStatement ps = null;
        try {
            Conexion c = new Conexion();
            java.sql.Connection conn = c.getConexion();

            int Fila = tbPuesto.getSelectedRow();
            //String codigo = tbGrupo.getValueAt(Fila, 0).toString();
            String idPuesto = txtIdPuesto.getText();

            ps = conn.prepareStatement("DELETE FROM tb_puestos WHERE id=?");
            ps.setString(1, idPuesto);
            ps.execute();

            modelo.removeRow(Fila);
            
            txtPuestoAgregar.setText(null);
            txtPuestoModificar.setText(null);
            txtPuestoModificar.setEnabled(false);
            btnPuestoModificar.setEnabled(false);
            btnPuestoEliminar.setEnabled(false);
            
            JOptionPane.showMessageDialog(null, "Puesto eliminado");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al eliminar el puesto");
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnPuestoEliminarActionPerformed

    private void limpiarDatos(){
            int filas=tbPuesto.getRowCount();
            for (int i = filas-1;i>=0; i--) {
                modelo.removeRow(i);
            }
            txtPuestoAgregar.setText(null);
            txtPuestoModificar.setText(null);
            txtPuestoModificar.setEnabled(false);
            btnPuestoModificar.setEnabled(false);
            btnPuestoEliminar.setEnabled(false);
    }
    
    private void cargarDatos(){
        PreparedStatement ps = null;
        ps = null;
        ResultSet rs = null;
        try{
            Conexion c = new Conexion();
            java.sql.Connection conn = c.getConexion();

            String sql = "" +
            "SELECT id,puesto from tb_puestos by puesto";
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            while (rs.next()) {
                Object[] filass = new Object[cantidadColumnas];
                //for (int i = 0; i < cantidadColumnas; i++) {
                //    filass[i] = rs.getObject(i + 1);
                //}
                filass[0] = rs.getString("puesto");
                modelo.addRow(filass);
            }
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, "Error al actualizar los datos");
            System.out.println(ex.getMessage());
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPuestoAgregar;
    private javax.swing.JButton btnPuestoEliminar;
    private javax.swing.JButton btnPuestoModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tbPuesto;
    private javax.swing.JTextField txtIdPuesto;
    private javax.swing.JTextField txtPuestoAgregar;
    private javax.swing.JTextField txtPuestoAnterior;
    private javax.swing.JTextField txtPuestoModificar;
    // End of variables declaration//GEN-END:variables
}
